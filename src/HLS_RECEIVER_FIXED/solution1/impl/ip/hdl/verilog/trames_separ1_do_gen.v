// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module trames_separ1_do_gen (
        ap_clk,
        ap_rst,
        e_dout,
        e_empty_n,
        e_read,
        detect_dout,
        detect_empty_n,
        detect_read,
        s_din,
        s_full_n,
        s_write
);

parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input  [7:0] e_dout;
input   e_empty_n;
output   e_read;
input   detect_dout;
input   detect_empty_n;
output   detect_read;
output  [7:0] s_din;
input   s_full_n;
output   s_write;

reg e_read;
reg detect_read;
reg s_write;

reg    e_blk_n;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln50_fu_137_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln55_fu_149_p2;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_reg_173;
wire   [0:0] icmp_ln60_fu_161_p2;
reg    detect_blk_n;
reg    s_blk_n;
wire   [0:0] grp_read_fu_90_p2;
reg    ap_block_state2;
wire   [8:0] i_fu_143_p2;
reg    ap_block_state3;
wire   [10:0] i_1_fu_155_p2;
reg    ap_block_state4;
wire   [7:0] i_2_fu_167_p2;
reg    ap_predicate_op53_read_state5;
reg    ap_predicate_op54_write_state5;
reg    ap_predicate_op55_read_state5;
reg    ap_block_state5;
reg   [8:0] i_0_reg_104;
reg   [10:0] i1_0_reg_115;
reg   [7:0] i2_0_reg_126;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd2;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_reg_115 <= 11'd0;
    end else if ((~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i1_0_reg_115 <= i_1_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i2_0_reg_126 <= 8'd0;
    end else if ((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i2_0_reg_126 <= i_2_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (grp_read_fu_90_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_104 <= 9'd0;
    end else if ((~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_104 <= i_fu_143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_173 <= detect_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        detect_blk_n = detect_empty_n;
    end else begin
        detect_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (ap_predicate_op55_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | (~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        detect_read = 1'b1;
    end else begin
        detect_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        e_blk_n = e_empty_n;
    end else begin
        e_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (ap_predicate_op53_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | (~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        e_read = 1'b1;
    end else begin
        e_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        s_blk_n = s_full_n;
    end else begin
        s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (ap_predicate_op54_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | (~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | (~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        s_write = 1'b1;
    end else begin
        s_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            if ((~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (grp_read_fu_90_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((detect_empty_n == 1'b0) | (e_empty_n == 1'b0)) & (grp_read_fu_90_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln50_fu_137_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~(((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0))) & (icmp_ln55_fu_149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (1'b1 == ap_CS_fsm_state5) & ((icmp_ln60_fu_161_p2 == 1'd1) | (tmp_reg_173 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1))) & (tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state2 = ((detect_empty_n == 1'b0) | (e_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = (((icmp_ln50_fu_137_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln50_fu_137_p2 == 1'd0) & (e_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = (((icmp_ln55_fu_149_p2 == 1'd0) & (s_full_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (detect_empty_n == 1'b0)) | ((icmp_ln55_fu_149_p2 == 1'd0) & (e_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5 = (((s_full_n == 1'b0) & (ap_predicate_op54_write_state5 == 1'b1)) | ((detect_empty_n == 1'b0) & (ap_predicate_op55_read_state5 == 1'b1)) | ((e_empty_n == 1'b0) & (ap_predicate_op53_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_predicate_op53_read_state5 = ((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op54_write_state5 = ((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op55_read_state5 = ((tmp_reg_173 == 1'd1) & (icmp_ln60_fu_161_p2 == 1'd0));
end

assign grp_read_fu_90_p2 = detect_dout;

assign i_1_fu_155_p2 = (i1_0_reg_115 + 11'd1);

assign i_2_fu_167_p2 = (i2_0_reg_126 + 8'd1);

assign i_fu_143_p2 = (i_0_reg_104 + 9'd1);

assign icmp_ln50_fu_137_p2 = ((i_0_reg_104 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_149_p2 = ((i1_0_reg_115 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_161_p2 = ((i2_0_reg_126 == 8'd128) ? 1'b1 : 1'b0);

assign s_din = e_dout;

endmodule //trames_separ1_do_gen
