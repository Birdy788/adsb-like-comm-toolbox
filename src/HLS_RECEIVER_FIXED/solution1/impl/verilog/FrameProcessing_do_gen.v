// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FrameProcessing_do_gen (
        ap_clk,
        ap_rst,
        e_dout,
        e_empty_n,
        e_read,
        addr_din,
        addr_full_n,
        addr_write,
        rgbv_din,
        rgbv_full_n,
        rgbv_write
);

parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input  [7:0] e_dout;
input   e_empty_n;
output   e_read;
output  [31:0] addr_din;
input   addr_full_n;
output   addr_write;
output  [23:0] rgbv_din;
input   rgbv_full_n;
output   rgbv_write;

reg e_read;
reg addr_write;
reg rgbv_write;

reg    e_blk_n;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [0:0] icmp_ln51_reg_376;
wire   [0:0] icmp_ln57_fu_328_p2;
reg   [0:0] icmp_ln60_reg_380;
wire   [0:0] icmp_ln70_fu_316_p2;
reg   [0:0] icmp_ln96_reg_384;
wire   [0:0] icmp_ln107_fu_305_p2;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln124_fu_285_p2;
reg    addr_blk_n;
reg    rgbv_blk_n;
reg   [7:0] reg_164;
reg    ap_predicate_op70_read_state10;
reg    ap_predicate_op79_read_state10;
reg    ap_predicate_op88_read_state10;
reg    ap_predicate_op97_read_state10;
reg    ap_block_state10;
reg   [7:0] reg_168;
reg   [7:0] val_V_5_reg_351;
reg   [7:0] val_V_6_reg_356;
reg   [7:0] val_V_7_reg_361;
reg   [7:0] val_V_8_reg_369;
wire   [0:0] icmp_ln51_fu_186_p2;
wire   [0:0] icmp_ln60_fu_192_p2;
wire   [0:0] icmp_ln96_fu_198_p2;
wire   [25:0] curr_off_fu_238_p2;
wire   [15:0] add_ln107_2_fu_279_p2;
reg   [15:0] add_ln107_2_reg_393;
wire   [6:0] i_4_fu_291_p2;
wire   [31:0] v_assign_cast_fu_297_p1;
reg   [31:0] v_assign_cast_reg_406;
wire   [25:0] curr_off_1_fu_310_p2;
reg   [25:0] curr_off_1_reg_414;
wire   [5:0] i_3_fu_322_p2;
wire   [5:0] i_fu_334_p2;
reg   [6:0] i3_0_reg_122;
reg   [25:0] v_assign_reg_133;
reg    ap_block_state12;
reg   [5:0] i1_0_reg_142;
reg   [5:0] i_0_reg_153;
wire   [15:0] type_fu_172_p3;
wire   [15:0] mot1_fu_180_p3;
wire   [24:0] shl_ln_fu_208_p4;
wire   [22:0] shl_ln103_1_fu_220_p4;
wire   [25:0] zext_ln103_fu_204_p1;
wire   [25:0] zext_ln103_1_fu_216_p1;
wire   [25:0] zext_ln103_2_fu_228_p1;
wire   [25:0] add_ln103_fu_232_p2;
wire   [6:0] trunc_ln107_fu_250_p1;
wire   [0:0] trunc_ln107_1_fu_261_p1;
wire   [15:0] p_shl2_fu_264_p4;
wire   [15:0] p_shl_fu_253_p3;
wire   [15:0] add_ln107_fu_244_p2;
wire   [15:0] add_ln107_1_fu_273_p2;
wire   [15:0] trunc_ln107_2_fu_301_p1;
reg   [11:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd2;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_186_p2 == 1'd0) & (icmp_ln60_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        i1_0_reg_142 <= 6'd0;
    end else if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln70_fu_316_p2 == 1'd0) & (icmp_ln60_reg_380 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i1_0_reg_142 <= i_3_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_198_p2 == 1'd0) & (icmp_ln60_fu_192_p2 == 1'd0) & (icmp_ln51_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        i3_0_reg_122 <= 7'd0;
    end else if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln60_reg_380 == 1'd0) & (icmp_ln124_fu_285_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd0) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i3_0_reg_122 <= i_4_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        i_0_reg_153 <= 6'd0;
    end else if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln57_fu_328_p2 == 1'd0) & (icmp_ln51_reg_376 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_reg_153 <= i_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        v_assign_reg_133 <= curr_off_1_reg_414;
    end else if (((icmp_ln60_fu_192_p2 == 1'd0) & (icmp_ln51_fu_186_p2 == 1'd0) & (icmp_ln96_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        v_assign_reg_133 <= curr_off_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_192_p2 == 1'd0) & (icmp_ln51_fu_186_p2 == 1'd0) & (icmp_ln96_fu_198_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        add_ln107_2_reg_393 <= add_ln107_2_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln60_reg_380 == 1'd0) & (icmp_ln107_fu_305_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        curr_off_1_reg_414 <= curr_off_1_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        icmp_ln51_reg_376 <= icmp_ln51_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        icmp_ln60_reg_380 <= icmp_ln60_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_192_p2 == 1'd0) & (icmp_ln51_fu_186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
        icmp_ln96_reg_384 <= icmp_ln96_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (ap_predicate_op79_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state2) & (e_empty_n == 1'b1)))) begin
        reg_164 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (e_empty_n == 1'b1)))) begin
        reg_168 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln60_reg_380 == 1'd0) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        v_assign_cast_reg_406[25 : 0] <= v_assign_cast_fu_297_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (e_empty_n == 1'b1))) begin
        val_V_5_reg_351 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (e_empty_n == 1'b1))) begin
        val_V_6_reg_356 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (e_empty_n == 1'b1))) begin
        val_V_7_reg_361 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (e_empty_n == 1'b1))) begin
        val_V_8_reg_369 <= e_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        addr_blk_n = addr_full_n;
    end else begin
        addr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        addr_write = 1'b1;
    end else begin
        addr_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((icmp_ln70_fu_316_p2 == 1'd0) & (icmp_ln60_reg_380 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln124_fu_285_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd0) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln107_fu_305_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln57_fu_328_p2 == 1'd0) & (icmp_ln51_reg_376 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        e_blk_n = e_empty_n;
    end else begin
        e_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (ap_predicate_op97_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (ap_predicate_op88_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (ap_predicate_op79_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (ap_predicate_op70_read_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (e_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (e_empty_n == 1'b1)) | (~((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_CS_fsm_state11) & (e_empty_n == 1'b1)))) begin
        e_read = 1'b1;
    end else begin
        e_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        rgbv_blk_n = rgbv_full_n;
    end else begin
        rgbv_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        rgbv_write = 1'b1;
    end else begin
        rgbv_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10) & (((((icmp_ln70_fu_316_p2 == 1'd1) & (icmp_ln60_reg_380 == 1'd1) & (icmp_ln51_reg_376 == 1'd0)) | ((icmp_ln57_fu_328_p2 == 1'd1) & (icmp_ln51_reg_376 == 1'd1))) | ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln107_fu_305_p2 == 1'd1) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0))) | ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln96_reg_384 == 1'd0) & (icmp_ln124_fu_285_p2 == 1'd1) & (icmp_ln51_reg_376 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (icmp_ln60_reg_380 == 1'd0) & (icmp_ln107_fu_305_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if ((~(((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state10) & ((((icmp_ln70_fu_316_p2 == 1'd0) & (icmp_ln60_reg_380 == 1'd1) & (icmp_ln51_reg_376 == 1'd0)) | ((icmp_ln57_fu_328_p2 == 1'd0) & (icmp_ln51_reg_376 == 1'd1))) | ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln124_fu_285_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd0) & (icmp_ln51_reg_376 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (e_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_232_p2 = (zext_ln103_fu_204_p1 + zext_ln103_1_fu_216_p1);

assign add_ln107_1_fu_273_p2 = (p_shl2_fu_264_p4 + p_shl_fu_253_p3);

assign add_ln107_2_fu_279_p2 = (add_ln107_fu_244_p2 + add_ln107_1_fu_273_p2);

assign add_ln107_fu_244_p2 = (16'd20 + mot1_fu_180_p3);

assign addr_din = v_assign_cast_reg_406;

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10 = (((ap_predicate_op97_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op88_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op79_read_state10 == 1'b1) & (e_empty_n == 1'b0)) | ((ap_predicate_op70_read_state10 == 1'b1) & (e_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12 = ((rgbv_full_n == 1'b0) | (1'b0 == addr_full_n) | (e_empty_n == 1'b0));
end

always @ (*) begin
    ap_predicate_op70_read_state10 = ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln124_fu_285_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd0) & (icmp_ln51_reg_376 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_read_state10 = ((icmp_ln60_reg_380 == 1'd0) & (icmp_ln107_fu_305_p2 == 1'd0) & (icmp_ln96_reg_384 == 1'd1) & (icmp_ln51_reg_376 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_read_state10 = ((icmp_ln70_fu_316_p2 == 1'd0) & (icmp_ln60_reg_380 == 1'd1) & (icmp_ln51_reg_376 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_read_state10 = ((icmp_ln57_fu_328_p2 == 1'd0) & (icmp_ln51_reg_376 == 1'd1));
end

assign curr_off_1_fu_310_p2 = (v_assign_reg_133 + 26'd1);

assign curr_off_fu_238_p2 = (zext_ln103_2_fu_228_p1 + add_ln103_fu_232_p2);

assign i_3_fu_322_p2 = (i1_0_reg_142 + 6'd1);

assign i_4_fu_291_p2 = (i3_0_reg_122 + 7'd1);

assign i_fu_334_p2 = (i_0_reg_153 + 6'd1);

assign icmp_ln107_fu_305_p2 = ((trunc_ln107_2_fu_301_p1 == add_ln107_2_reg_393) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_285_p2 = ((i3_0_reg_122 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_186_p2 = ((type_fu_172_p3 == 16'd34) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_328_p2 = ((i_0_reg_153 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_192_p2 = ((type_fu_172_p3 == 16'd51) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_316_p2 = ((i1_0_reg_142 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_198_p2 = ((type_fu_172_p3 == 16'd17) ? 1'b1 : 1'b0);

assign mot1_fu_180_p3 = {{val_V_6_reg_356}, {val_V_5_reg_351}};

assign p_shl2_fu_264_p4 = {{{trunc_ln107_1_fu_261_p1}, {val_V_7_reg_361}}, {7'd0}};

assign p_shl_fu_253_p3 = {{trunc_ln107_fu_250_p1}, {9'd0}};

assign rgbv_din = {{{reg_164}, {reg_168}}, {e_dout}};

assign shl_ln103_1_fu_220_p4 = {{{val_V_8_reg_369}, {val_V_7_reg_361}}, {7'd0}};

assign shl_ln_fu_208_p4 = {{{val_V_8_reg_369}, {val_V_7_reg_361}}, {9'd0}};

assign trunc_ln107_1_fu_261_p1 = val_V_8_reg_369[0:0];

assign trunc_ln107_2_fu_301_p1 = v_assign_reg_133[15:0];

assign trunc_ln107_fu_250_p1 = val_V_7_reg_361[6:0];

assign type_fu_172_p3 = {{reg_168}, {reg_164}};

assign v_assign_cast_fu_297_p1 = v_assign_reg_133;

assign zext_ln103_1_fu_216_p1 = shl_ln_fu_208_p4;

assign zext_ln103_2_fu_228_p1 = shl_ln103_1_fu_220_p4;

assign zext_ln103_fu_204_p1 = mot1_fu_180_p3;

always @ (posedge ap_clk) begin
    v_assign_cast_reg_406[31:26] <= 6'b000000;
end

endmodule //FrameProcessing_do_gen
