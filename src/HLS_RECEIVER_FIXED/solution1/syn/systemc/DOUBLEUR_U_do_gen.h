// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _DOUBLEUR_U_do_gen_HH_
#define _DOUBLEUR_U_do_gen_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct DOUBLEUR_U_do_gen : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > e_dout;
    sc_in< sc_logic > e_empty_n;
    sc_out< sc_logic > e_read;
    sc_out< sc_lv<8> > s1_din;
    sc_in< sc_logic > s1_full_n;
    sc_out< sc_logic > s1_write;
    sc_out< sc_lv<8> > s2_din;
    sc_in< sc_logic > s2_full_n;
    sc_out< sc_logic > s2_write;


    // Module declarations
    DOUBLEUR_U_do_gen(sc_module_name name);
    SC_HAS_PROCESS(DOUBLEUR_U_do_gen);

    ~DOUBLEUR_U_do_gen();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > e_blk_n;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > s1_blk_n;
    sc_signal< sc_logic > s2_blk_n;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state2();
    void thread_e_blk_n();
    void thread_e_read();
    void thread_s1_blk_n();
    void thread_s1_din();
    void thread_s1_write();
    void thread_s2_blk_n();
    void thread_s2_din();
    void thread_s2_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
