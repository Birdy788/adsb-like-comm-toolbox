// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ModuleCompute_do_gen.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ModuleCompute_do_gen::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ModuleCompute_do_gen::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> ModuleCompute_do_gen::ap_ST_fsm_state2 = "10";
const sc_lv<6> ModuleCompute_do_gen::ap_ST_fsm_state3 = "100";
const sc_lv<6> ModuleCompute_do_gen::ap_ST_fsm_state4 = "1000";
const sc_lv<6> ModuleCompute_do_gen::ap_ST_fsm_state5 = "10000";
const sc_lv<6> ModuleCompute_do_gen::ap_ST_fsm_state6 = "100000";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_1 = "1";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_2 = "10";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_4 = "100";
const sc_lv<1> ModuleCompute_do_gen::ap_const_lv1_1 = "1";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_3 = "11";
const sc_lv<1> ModuleCompute_do_gen::ap_const_lv1_0 = "0";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_5 = "101";
const sc_lv<8> ModuleCompute_do_gen::ap_const_lv8_0 = "00000000";
const sc_lv<8> ModuleCompute_do_gen::ap_const_lv8_80 = "10000000";
const sc_lv<4> ModuleCompute_do_gen::ap_const_lv4_0 = "0000";
const sc_lv<4> ModuleCompute_do_gen::ap_const_lv4_8 = "1000";
const sc_lv<4> ModuleCompute_do_gen::ap_const_lv4_1 = "1";
const sc_lv<32> ModuleCompute_do_gen::ap_const_lv32_7 = "111";
const bool ModuleCompute_do_gen::ap_const_boolean_1 = true;

ModuleCompute_do_gen::ModuleCompute_do_gen(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ModuleCompute_macibs_U126 = new ModuleCompute_macibs<1,1,8,8,16,16>("ModuleCompute_macibs_U126");
    ModuleCompute_macibs_U126->din0(grp_fu_183_p0);
    ModuleCompute_macibs_U126->din1(grp_fu_183_p1);
    ModuleCompute_macibs_U126->din2(grp_fu_183_p2);
    ModuleCompute_macibs_U126->dout(grp_fu_183_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_1_fu_173_p1);
    sensitive << ( add_fu_163_p4 );

    SC_METHOD(thread_add_fu_163_p4);
    sensitive << ( add_0_i_reg_96 );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( s_full_n );
    sensitive << ( icmp_ln70_fu_130_p2 );

    SC_METHOD(thread_e_blk_n);
    sensitive << ( e_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_e_read);
    sensitive << ( e_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_g2_fu_152_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln73_fu_148_p1 );

    SC_METHOD(thread_g2_fu_152_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln73_fu_148_p1 );

    SC_METHOD(thread_g2_fu_152_p2);
    sensitive << ( g2_fu_152_p0 );
    sensitive << ( g2_fu_152_p1 );

    SC_METHOD(thread_grp_fu_183_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( lhs_V_fu_118_p1 );

    SC_METHOD(thread_grp_fu_183_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( lhs_V_fu_118_p1 );

    SC_METHOD(thread_grp_fu_183_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ret_V_1_fu_124_p0 );
    sensitive << ( ret_V_1_fu_124_p1 );

    SC_METHOD(thread_i_fu_136_p2);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_icmp_ln70_fu_130_p2);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_icmp_ln74_fu_158_p2);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );
    sensitive << ( add_ln99_reg_201 );
    sensitive << ( g2_fu_152_p2 );

    SC_METHOD(thread_lhs_V_1_fu_121_p1);
    sensitive << ( val_V_3_reg_196 );

    SC_METHOD(thread_lhs_V_fu_118_p1);
    sensitive << ( val_V_reg_191 );

    SC_METHOD(thread_res_fu_142_p2);
    sensitive << ( rc_V_reg_83 );
    sensitive << ( add_0_i_reg_96 );

    SC_METHOD(thread_ret_V_1_fu_124_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( lhs_V_1_fu_121_p1 );

    SC_METHOD(thread_ret_V_1_fu_124_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( lhs_V_1_fu_121_p1 );

    SC_METHOD(thread_s_blk_n);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );

    SC_METHOD(thread_s_din);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );
    sensitive << ( rc_V_reg_83 );

    SC_METHOD(thread_s_write);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );

    SC_METHOD(thread_select_ln74_fu_177_p3);
    sensitive << ( res_reg_214 );
    sensitive << ( icmp_ln74_reg_219 );
    sensitive << ( rc_V_reg_83 );

    SC_METHOD(thread_zext_ln73_fu_148_p1);
    sensitive << ( res_fu_142_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( e_empty_n );
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln70_fu_130_p2 );

    ap_CS_fsm = "000010";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ModuleCompute_do_gen_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, e_dout, "(port)e_dout");
    sc_trace(mVcdFile, e_empty_n, "(port)e_empty_n");
    sc_trace(mVcdFile, e_read, "(port)e_read");
    sc_trace(mVcdFile, s_din, "(port)s_din");
    sc_trace(mVcdFile, s_full_n, "(port)s_full_n");
    sc_trace(mVcdFile, s_write, "(port)s_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, e_blk_n, "e_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, s_blk_n, "s_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln70_fu_130_p2, "icmp_ln70_fu_130_p2");
    sc_trace(mVcdFile, val_V_reg_191, "val_V_reg_191");
    sc_trace(mVcdFile, val_V_3_reg_196, "val_V_3_reg_196");
    sc_trace(mVcdFile, grp_fu_183_p3, "grp_fu_183_p3");
    sc_trace(mVcdFile, add_ln99_reg_201, "add_ln99_reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_136_p2, "i_fu_136_p2");
    sc_trace(mVcdFile, i_reg_209, "i_reg_209");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, res_fu_142_p2, "res_fu_142_p2");
    sc_trace(mVcdFile, res_reg_214, "res_reg_214");
    sc_trace(mVcdFile, icmp_ln74_fu_158_p2, "icmp_ln74_fu_158_p2");
    sc_trace(mVcdFile, icmp_ln74_reg_219, "icmp_ln74_reg_219");
    sc_trace(mVcdFile, add_1_fu_173_p1, "add_1_fu_173_p1");
    sc_trace(mVcdFile, add_1_reg_224, "add_1_reg_224");
    sc_trace(mVcdFile, select_ln74_fu_177_p3, "select_ln74_fu_177_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, rc_V_reg_83, "rc_V_reg_83");
    sc_trace(mVcdFile, add_0_i_reg_96, "add_0_i_reg_96");
    sc_trace(mVcdFile, i_0_i_reg_107, "i_0_i_reg_107");
    sc_trace(mVcdFile, ret_V_1_fu_124_p0, "ret_V_1_fu_124_p0");
    sc_trace(mVcdFile, lhs_V_1_fu_121_p1, "lhs_V_1_fu_121_p1");
    sc_trace(mVcdFile, ret_V_1_fu_124_p1, "ret_V_1_fu_124_p1");
    sc_trace(mVcdFile, g2_fu_152_p0, "g2_fu_152_p0");
    sc_trace(mVcdFile, zext_ln73_fu_148_p1, "zext_ln73_fu_148_p1");
    sc_trace(mVcdFile, g2_fu_152_p1, "g2_fu_152_p1");
    sc_trace(mVcdFile, g2_fu_152_p2, "g2_fu_152_p2");
    sc_trace(mVcdFile, add_fu_163_p4, "add_fu_163_p4");
    sc_trace(mVcdFile, grp_fu_183_p0, "grp_fu_183_p0");
    sc_trace(mVcdFile, lhs_V_fu_118_p1, "lhs_V_fu_118_p1");
    sc_trace(mVcdFile, grp_fu_183_p1, "grp_fu_183_p1");
    sc_trace(mVcdFile, grp_fu_183_p2, "grp_fu_183_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

ModuleCompute_do_gen::~ModuleCompute_do_gen() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ModuleCompute_macibs_U126;
}

void ModuleCompute_do_gen::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_0_i_reg_96 = add_1_reg_224.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_0_i_reg_96 = ap_const_lv8_80;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state2;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_0_i_reg_107 = i_reg_209.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_i_reg_107 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        rc_V_reg_83 = select_ln74_fu_177_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rc_V_reg_83 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read())) && esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_0))) {
        add_1_reg_224 = add_1_fu_173_p1.read();
        icmp_ln74_reg_219 = icmp_ln74_fu_158_p2.read();
        res_reg_214 = res_fu_142_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln99_reg_201 = grp_fu_183_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read())))) {
        i_reg_209 = i_fu_136_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
        val_V_3_reg_196 = e_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
        val_V_reg_191 = e_dout.read();
    }
}

void ModuleCompute_do_gen::thread_add_1_fu_173_p1() {
    add_1_fu_173_p1 = esl_zext<8,7>(add_fu_163_p4.read());
}

void ModuleCompute_do_gen::thread_add_fu_163_p4() {
    add_fu_163_p4 = add_0_i_reg_96.read().range(7, 1);
}

void ModuleCompute_do_gen::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void ModuleCompute_do_gen::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void ModuleCompute_do_gen::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void ModuleCompute_do_gen::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void ModuleCompute_do_gen::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void ModuleCompute_do_gen::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read()));
}

void ModuleCompute_do_gen::thread_e_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        e_blk_n = e_empty_n.read();
    } else {
        e_blk_n = ap_const_logic_1;
    }
}

void ModuleCompute_do_gen::thread_e_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1)))) {
        e_read = ap_const_logic_1;
    } else {
        e_read = ap_const_logic_0;
    }
}

void ModuleCompute_do_gen::thread_g2_fu_152_p0() {
    g2_fu_152_p0 =  (sc_lv<8>) (zext_ln73_fu_148_p1.read());
}

void ModuleCompute_do_gen::thread_g2_fu_152_p1() {
    g2_fu_152_p1 =  (sc_lv<8>) (zext_ln73_fu_148_p1.read());
}

void ModuleCompute_do_gen::thread_g2_fu_152_p2() {
    g2_fu_152_p2 = (!g2_fu_152_p0.read().is_01() || !g2_fu_152_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(g2_fu_152_p0.read()) * sc_biguint<8>(g2_fu_152_p1.read());
}

void ModuleCompute_do_gen::thread_grp_fu_183_p0() {
    grp_fu_183_p0 =  (sc_lv<8>) (lhs_V_fu_118_p1.read());
}

void ModuleCompute_do_gen::thread_grp_fu_183_p1() {
    grp_fu_183_p1 =  (sc_lv<8>) (lhs_V_fu_118_p1.read());
}

void ModuleCompute_do_gen::thread_grp_fu_183_p2() {
    grp_fu_183_p2 = (!ret_V_1_fu_124_p0.read().is_01() || !ret_V_1_fu_124_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(ret_V_1_fu_124_p0.read()) * sc_bigint<8>(ret_V_1_fu_124_p1.read());
}

void ModuleCompute_do_gen::thread_i_fu_136_p2() {
    i_fu_136_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_107.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void ModuleCompute_do_gen::thread_icmp_ln70_fu_130_p2() {
    icmp_ln70_fu_130_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_107.read() == ap_const_lv4_8);
}

void ModuleCompute_do_gen::thread_icmp_ln74_fu_158_p2() {
    icmp_ln74_fu_158_p2 = (!g2_fu_152_p2.read().is_01() || !add_ln99_reg_201.read().is_01())? sc_lv<1>(): (sc_biguint<16>(g2_fu_152_p2.read()) > sc_biguint<16>(add_ln99_reg_201.read()));
}

void ModuleCompute_do_gen::thread_lhs_V_1_fu_121_p1() {
    lhs_V_1_fu_121_p1 = esl_sext<16,8>(val_V_3_reg_196.read());
}

void ModuleCompute_do_gen::thread_lhs_V_fu_118_p1() {
    lhs_V_fu_118_p1 = esl_sext<16,8>(val_V_reg_191.read());
}

void ModuleCompute_do_gen::thread_res_fu_142_p2() {
    res_fu_142_p2 = (add_0_i_reg_96.read() | rc_V_reg_83.read());
}

void ModuleCompute_do_gen::thread_ret_V_1_fu_124_p0() {
    ret_V_1_fu_124_p0 =  (sc_lv<8>) (lhs_V_1_fu_121_p1.read());
}

void ModuleCompute_do_gen::thread_ret_V_1_fu_124_p1() {
    ret_V_1_fu_124_p1 =  (sc_lv<8>) (lhs_V_1_fu_121_p1.read());
}

void ModuleCompute_do_gen::thread_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1))) {
        s_blk_n = s_full_n.read();
    } else {
        s_blk_n = ap_const_logic_1;
    }
}

void ModuleCompute_do_gen::thread_s_din() {
    s_din = rc_V_reg_83.read();
}

void ModuleCompute_do_gen::thread_s_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read())))) {
        s_write = ap_const_logic_1;
    } else {
        s_write = ap_const_logic_0;
    }
}

void ModuleCompute_do_gen::thread_select_ln74_fu_177_p3() {
    select_ln74_fu_177_p3 = (!icmp_ln74_reg_219.read()[0].is_01())? sc_lv<8>(): ((icmp_ln74_reg_219.read()[0].to_bool())? rc_V_reg_83.read(): res_reg_214.read());
}

void ModuleCompute_do_gen::thread_zext_ln73_fu_148_p1() {
    zext_ln73_fu_148_p1 = esl_zext<16,8>(res_fu_142_p2.read());
}

void ModuleCompute_do_gen::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, s_full_n.read())) && esl_seteq<1,1,1>(icmp_ln70_fu_130_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

