// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "my_module.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic my_module::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic my_module::ap_const_logic_0 = sc_dt::Log_0;

my_module::my_module(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_ModuleCompute_fu_212 = new ModuleCompute("grp_ModuleCompute_fu_212");
    grp_ModuleCompute_fu_212->e_dout(e_dout);
    grp_ModuleCompute_fu_212->e_empty_n(e_empty_n);
    grp_ModuleCompute_fu_212->e_read(grp_ModuleCompute_fu_212_e_read);
    grp_ModuleCompute_fu_212->s_din(grp_ModuleCompute_fu_212_s_din);
    grp_ModuleCompute_fu_212->s_full_n(mod2dbl_1_full_n);
    grp_ModuleCompute_fu_212->s_write(grp_ModuleCompute_fu_212_s_write);
    grp_ModuleCompute_fu_212->clock(clock);
    grp_ModuleCompute_fu_212->reset(reset);
    grp_Detecteur_fu_226 = new Detecteur("grp_Detecteur_fu_226");
    grp_Detecteur_fu_226->e_dout(mod2dbl_1_dout);
    grp_Detecteur_fu_226->e_empty_n(mod2dbl_1_empty_n);
    grp_Detecteur_fu_226->e_read(grp_Detecteur_fu_226_e_read);
    grp_Detecteur_fu_226->s_din(grp_Detecteur_fu_226_s_din);
    grp_Detecteur_fu_226->s_full_n(det2dow_1_full_n);
    grp_Detecteur_fu_226->s_write(grp_Detecteur_fu_226_s_write);
    grp_Detecteur_fu_226->clock(clock);
    grp_Detecteur_fu_226->reset(reset);
    grp_DownSampling_fu_278 = new DownSampling("grp_DownSampling_fu_278");
    grp_DownSampling_fu_278->e_dout(det2dow_1_dout);
    grp_DownSampling_fu_278->e_empty_n(det2dow_1_empty_n);
    grp_DownSampling_fu_278->e_read(grp_DownSampling_fu_278_e_read);
    grp_DownSampling_fu_278->s_din(grp_DownSampling_fu_278_s_din);
    grp_DownSampling_fu_278->s_full_n(dow2bit_1_full_n);
    grp_DownSampling_fu_278->s_write(grp_DownSampling_fu_278_s_write);
    grp_DownSampling_fu_278->clock(clock);
    grp_DownSampling_fu_278->reset(reset);
    grp_BitDecider_fu_292 = new BitDecider("grp_BitDecider_fu_292");
    grp_BitDecider_fu_292->e_dout(dow2bit_1_dout);
    grp_BitDecider_fu_292->e_empty_n(dow2bit_1_empty_n);
    grp_BitDecider_fu_292->e_read(grp_BitDecider_fu_292_e_read);
    grp_BitDecider_fu_292->s_din(grp_BitDecider_fu_292_s_din);
    grp_BitDecider_fu_292->s_full_n(bit2byt_1_full_n);
    grp_BitDecider_fu_292->s_write(grp_BitDecider_fu_292_s_write);
    grp_BitDecider_fu_292->clock(clock);
    grp_BitDecider_fu_292->reset(reset);
    grp_BitsToBytes_fu_306 = new BitsToBytes("grp_BitsToBytes_fu_306");
    grp_BitsToBytes_fu_306->e_dout(bit2byt_1_dout);
    grp_BitsToBytes_fu_306->e_empty_n(bit2byt_1_empty_n);
    grp_BitsToBytes_fu_306->e_read(grp_BitsToBytes_fu_306_e_read);
    grp_BitsToBytes_fu_306->s_din(grp_BitsToBytes_fu_306_s_din);
    grp_BitsToBytes_fu_306->s_full_n(byt2crc_1_full_n);
    grp_BitsToBytes_fu_306->s_write(grp_BitsToBytes_fu_306_s_write);
    grp_BitsToBytes_fu_306->clock(clock);
    grp_BitsToBytes_fu_306->reset(reset);
    grp_CRCCheck_fu_320 = new CRCCheck("grp_CRCCheck_fu_320");
    grp_CRCCheck_fu_320->e_dout(byt2crc_1_dout);
    grp_CRCCheck_fu_320->e_empty_n(byt2crc_1_empty_n);
    grp_CRCCheck_fu_320->e_read(grp_CRCCheck_fu_320_e_read);
    grp_CRCCheck_fu_320->s_din(grp_CRCCheck_fu_320_s_din);
    grp_CRCCheck_fu_320->s_full_n(crc2fra_1_full_n);
    grp_CRCCheck_fu_320->s_write(grp_CRCCheck_fu_320_s_write);
    grp_CRCCheck_fu_320->clock(clock);
    grp_CRCCheck_fu_320->reset(reset);
    grp_FrameProcessing_fu_334 = new FrameProcessing("grp_FrameProcessing_fu_334");
    grp_FrameProcessing_fu_334->e_dout(crc2fra_1_dout);
    grp_FrameProcessing_fu_334->e_empty_n(crc2fra_1_empty_n);
    grp_FrameProcessing_fu_334->e_read(grp_FrameProcessing_fu_334_e_read);
    grp_FrameProcessing_fu_334->addr_din(grp_FrameProcessing_fu_334_addr_din);
    grp_FrameProcessing_fu_334->addr_full_n(addr_full_n);
    grp_FrameProcessing_fu_334->addr_write(grp_FrameProcessing_fu_334_addr_write);
    grp_FrameProcessing_fu_334->rgbv_din(grp_FrameProcessing_fu_334_rgbv_din);
    grp_FrameProcessing_fu_334->rgbv_full_n(rgbv_full_n);
    grp_FrameProcessing_fu_334->rgbv_write(grp_FrameProcessing_fu_334_rgbv_write);
    grp_FrameProcessing_fu_334->clock(clock);
    grp_FrameProcessing_fu_334->reset(reset);
    mod2dbl_1_fifo_U = new fifo_w8_d1024_A_x("mod2dbl_1_fifo_U");
    mod2dbl_1_fifo_U->clk(clock);
    mod2dbl_1_fifo_U->reset(reset);
    mod2dbl_1_fifo_U->if_read_ce(ap_var_for_const0);
    mod2dbl_1_fifo_U->if_write_ce(ap_var_for_const0);
    mod2dbl_1_fifo_U->if_din(grp_ModuleCompute_fu_212_s_din);
    mod2dbl_1_fifo_U->if_full_n(mod2dbl_1_full_n);
    mod2dbl_1_fifo_U->if_write(grp_ModuleCompute_fu_212_s_write);
    mod2dbl_1_fifo_U->if_dout(mod2dbl_1_dout);
    mod2dbl_1_fifo_U->if_empty_n(mod2dbl_1_empty_n);
    mod2dbl_1_fifo_U->if_read(grp_Detecteur_fu_226_e_read);
    det2dow_1_fifo_U = new fifo_w8_d32_A("det2dow_1_fifo_U");
    det2dow_1_fifo_U->clk(clock);
    det2dow_1_fifo_U->reset(reset);
    det2dow_1_fifo_U->if_read_ce(ap_var_for_const0);
    det2dow_1_fifo_U->if_write_ce(ap_var_for_const0);
    det2dow_1_fifo_U->if_din(grp_Detecteur_fu_226_s_din);
    det2dow_1_fifo_U->if_full_n(det2dow_1_full_n);
    det2dow_1_fifo_U->if_write(grp_Detecteur_fu_226_s_write);
    det2dow_1_fifo_U->if_dout(det2dow_1_dout);
    det2dow_1_fifo_U->if_empty_n(det2dow_1_empty_n);
    det2dow_1_fifo_U->if_read(grp_DownSampling_fu_278_e_read);
    dow2bit_1_fifo_U = new fifo_w8_d32_A("dow2bit_1_fifo_U");
    dow2bit_1_fifo_U->clk(clock);
    dow2bit_1_fifo_U->reset(reset);
    dow2bit_1_fifo_U->if_read_ce(ap_var_for_const0);
    dow2bit_1_fifo_U->if_write_ce(ap_var_for_const0);
    dow2bit_1_fifo_U->if_din(grp_DownSampling_fu_278_s_din);
    dow2bit_1_fifo_U->if_full_n(dow2bit_1_full_n);
    dow2bit_1_fifo_U->if_write(grp_DownSampling_fu_278_s_write);
    dow2bit_1_fifo_U->if_dout(dow2bit_1_dout);
    dow2bit_1_fifo_U->if_empty_n(dow2bit_1_empty_n);
    dow2bit_1_fifo_U->if_read(grp_BitDecider_fu_292_e_read);
    bit2byt_1_fifo_U = new fifo_w1_d32_A("bit2byt_1_fifo_U");
    bit2byt_1_fifo_U->clk(clock);
    bit2byt_1_fifo_U->reset(reset);
    bit2byt_1_fifo_U->if_read_ce(ap_var_for_const0);
    bit2byt_1_fifo_U->if_write_ce(ap_var_for_const0);
    bit2byt_1_fifo_U->if_din(grp_BitDecider_fu_292_s_din);
    bit2byt_1_fifo_U->if_full_n(bit2byt_1_full_n);
    bit2byt_1_fifo_U->if_write(grp_BitDecider_fu_292_s_write);
    bit2byt_1_fifo_U->if_dout(bit2byt_1_dout);
    bit2byt_1_fifo_U->if_empty_n(bit2byt_1_empty_n);
    bit2byt_1_fifo_U->if_read(grp_BitsToBytes_fu_306_e_read);
    byt2crc_1_fifo_U = new fifo_w8_d32_A("byt2crc_1_fifo_U");
    byt2crc_1_fifo_U->clk(clock);
    byt2crc_1_fifo_U->reset(reset);
    byt2crc_1_fifo_U->if_read_ce(ap_var_for_const0);
    byt2crc_1_fifo_U->if_write_ce(ap_var_for_const0);
    byt2crc_1_fifo_U->if_din(grp_BitsToBytes_fu_306_s_din);
    byt2crc_1_fifo_U->if_full_n(byt2crc_1_full_n);
    byt2crc_1_fifo_U->if_write(grp_BitsToBytes_fu_306_s_write);
    byt2crc_1_fifo_U->if_dout(byt2crc_1_dout);
    byt2crc_1_fifo_U->if_empty_n(byt2crc_1_empty_n);
    byt2crc_1_fifo_U->if_read(grp_CRCCheck_fu_320_e_read);
    crc2fra_1_fifo_U = new fifo_w8_d32_A("crc2fra_1_fifo_U");
    crc2fra_1_fifo_U->clk(clock);
    crc2fra_1_fifo_U->reset(reset);
    crc2fra_1_fifo_U->if_read_ce(ap_var_for_const0);
    crc2fra_1_fifo_U->if_write_ce(ap_var_for_const0);
    crc2fra_1_fifo_U->if_din(grp_CRCCheck_fu_320_s_din);
    crc2fra_1_fifo_U->if_full_n(crc2fra_1_full_n);
    crc2fra_1_fifo_U->if_write(grp_CRCCheck_fu_320_s_write);
    crc2fra_1_fifo_U->if_dout(crc2fra_1_dout);
    crc2fra_1_fifo_U->if_empty_n(crc2fra_1_empty_n);
    crc2fra_1_fifo_U->if_read(grp_FrameProcessing_fu_334_e_read);

    SC_METHOD(thread_addr_din);
    sensitive << ( grp_FrameProcessing_fu_334_addr_din );

    SC_METHOD(thread_addr_write);
    sensitive << ( grp_FrameProcessing_fu_334_addr_write );

    SC_METHOD(thread_e_read);
    sensitive << ( grp_ModuleCompute_fu_212_e_read );

    SC_METHOD(thread_rgbv_din);
    sensitive << ( grp_FrameProcessing_fu_334_rgbv_din );

    SC_METHOD(thread_rgbv_write);
    sensitive << ( grp_FrameProcessing_fu_334_rgbv_write );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( clock.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "my_module_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, clock, "(port)clock");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, e_dout, "(port)e_dout");
    sc_trace(mVcdFile, e_empty_n, "(port)e_empty_n");
    sc_trace(mVcdFile, e_read, "(port)e_read");
    sc_trace(mVcdFile, addr_din, "(port)addr_din");
    sc_trace(mVcdFile, addr_full_n, "(port)addr_full_n");
    sc_trace(mVcdFile, addr_write, "(port)addr_write");
    sc_trace(mVcdFile, rgbv_din, "(port)rgbv_din");
    sc_trace(mVcdFile, rgbv_full_n, "(port)rgbv_full_n");
    sc_trace(mVcdFile, rgbv_write, "(port)rgbv_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, grp_ModuleCompute_fu_212_e_read, "grp_ModuleCompute_fu_212_e_read");
    sc_trace(mVcdFile, grp_ModuleCompute_fu_212_s_din, "grp_ModuleCompute_fu_212_s_din");
    sc_trace(mVcdFile, grp_ModuleCompute_fu_212_s_write, "grp_ModuleCompute_fu_212_s_write");
    sc_trace(mVcdFile, grp_Detecteur_fu_226_e_read, "grp_Detecteur_fu_226_e_read");
    sc_trace(mVcdFile, grp_Detecteur_fu_226_s_din, "grp_Detecteur_fu_226_s_din");
    sc_trace(mVcdFile, grp_Detecteur_fu_226_s_write, "grp_Detecteur_fu_226_s_write");
    sc_trace(mVcdFile, grp_DownSampling_fu_278_e_read, "grp_DownSampling_fu_278_e_read");
    sc_trace(mVcdFile, grp_DownSampling_fu_278_s_din, "grp_DownSampling_fu_278_s_din");
    sc_trace(mVcdFile, grp_DownSampling_fu_278_s_write, "grp_DownSampling_fu_278_s_write");
    sc_trace(mVcdFile, grp_BitDecider_fu_292_e_read, "grp_BitDecider_fu_292_e_read");
    sc_trace(mVcdFile, grp_BitDecider_fu_292_s_din, "grp_BitDecider_fu_292_s_din");
    sc_trace(mVcdFile, grp_BitDecider_fu_292_s_write, "grp_BitDecider_fu_292_s_write");
    sc_trace(mVcdFile, grp_BitsToBytes_fu_306_e_read, "grp_BitsToBytes_fu_306_e_read");
    sc_trace(mVcdFile, grp_BitsToBytes_fu_306_s_din, "grp_BitsToBytes_fu_306_s_din");
    sc_trace(mVcdFile, grp_BitsToBytes_fu_306_s_write, "grp_BitsToBytes_fu_306_s_write");
    sc_trace(mVcdFile, grp_CRCCheck_fu_320_e_read, "grp_CRCCheck_fu_320_e_read");
    sc_trace(mVcdFile, grp_CRCCheck_fu_320_s_din, "grp_CRCCheck_fu_320_s_din");
    sc_trace(mVcdFile, grp_CRCCheck_fu_320_s_write, "grp_CRCCheck_fu_320_s_write");
    sc_trace(mVcdFile, grp_FrameProcessing_fu_334_e_read, "grp_FrameProcessing_fu_334_e_read");
    sc_trace(mVcdFile, grp_FrameProcessing_fu_334_addr_din, "grp_FrameProcessing_fu_334_addr_din");
    sc_trace(mVcdFile, grp_FrameProcessing_fu_334_addr_write, "grp_FrameProcessing_fu_334_addr_write");
    sc_trace(mVcdFile, grp_FrameProcessing_fu_334_rgbv_din, "grp_FrameProcessing_fu_334_rgbv_din");
    sc_trace(mVcdFile, grp_FrameProcessing_fu_334_rgbv_write, "grp_FrameProcessing_fu_334_rgbv_write");
    sc_trace(mVcdFile, mod2dbl_1_full_n, "mod2dbl_1_full_n");
    sc_trace(mVcdFile, mod2dbl_1_dout, "mod2dbl_1_dout");
    sc_trace(mVcdFile, mod2dbl_1_empty_n, "mod2dbl_1_empty_n");
    sc_trace(mVcdFile, det2dow_1_full_n, "det2dow_1_full_n");
    sc_trace(mVcdFile, det2dow_1_dout, "det2dow_1_dout");
    sc_trace(mVcdFile, det2dow_1_empty_n, "det2dow_1_empty_n");
    sc_trace(mVcdFile, dow2bit_1_full_n, "dow2bit_1_full_n");
    sc_trace(mVcdFile, dow2bit_1_dout, "dow2bit_1_dout");
    sc_trace(mVcdFile, dow2bit_1_empty_n, "dow2bit_1_empty_n");
    sc_trace(mVcdFile, bit2byt_1_full_n, "bit2byt_1_full_n");
    sc_trace(mVcdFile, bit2byt_1_dout, "bit2byt_1_dout");
    sc_trace(mVcdFile, bit2byt_1_empty_n, "bit2byt_1_empty_n");
    sc_trace(mVcdFile, byt2crc_1_full_n, "byt2crc_1_full_n");
    sc_trace(mVcdFile, byt2crc_1_dout, "byt2crc_1_dout");
    sc_trace(mVcdFile, byt2crc_1_empty_n, "byt2crc_1_empty_n");
    sc_trace(mVcdFile, crc2fra_1_full_n, "crc2fra_1_full_n");
    sc_trace(mVcdFile, crc2fra_1_dout, "crc2fra_1_dout");
    sc_trace(mVcdFile, crc2fra_1_empty_n, "crc2fra_1_empty_n");
#endif

    }
    mHdltvinHandle.open("my_module.hdltvin.dat");
    mHdltvoutHandle.open("my_module.hdltvout.dat");
}

my_module::~my_module() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_ModuleCompute_fu_212;
    delete grp_Detecteur_fu_226;
    delete grp_DownSampling_fu_278;
    delete grp_BitDecider_fu_292;
    delete grp_BitsToBytes_fu_306;
    delete grp_CRCCheck_fu_320;
    delete grp_FrameProcessing_fu_334;
    delete mod2dbl_1_fifo_U;
    delete det2dow_1_fifo_U;
    delete dow2bit_1_fifo_U;
    delete bit2byt_1_fifo_U;
    delete byt2crc_1_fifo_U;
    delete crc2fra_1_fifo_U;
}

void my_module::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void my_module::thread_addr_din() {
    addr_din = grp_FrameProcessing_fu_334_addr_din.read();
}

void my_module::thread_addr_write() {
    addr_write = grp_FrameProcessing_fu_334_addr_write.read();
}

void my_module::thread_e_read() {
    e_read = grp_ModuleCompute_fu_212_e_read.read();
}

void my_module::thread_rgbv_din() {
    rgbv_din = grp_FrameProcessing_fu_334_rgbv_din.read();
}

void my_module::thread_rgbv_write() {
    rgbv_write = grp_FrameProcessing_fu_334_rgbv_write.read();
}

void my_module::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"reset\" :  \"" << reset.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"e_dout\" :  \"" << e_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"e_empty_n\" :  \"" << e_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"e_read\" :  \"" << e_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"addr_din\" :  \"" << addr_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"addr_full_n\" :  \"" << addr_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"addr_write\" :  \"" << addr_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rgbv_din\" :  \"" << rgbv_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"rgbv_full_n\" :  \"" << rgbv_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"rgbv_write\" :  \"" << rgbv_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

