// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CRCCheck_do_gen (
        ap_clk,
        ap_rst,
        e_dout,
        e_empty_n,
        e_read,
        s_din,
        s_full_n,
        s_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_pp0_stage0 = 8'd4;
parameter    ap_ST_fsm_state6 = 8'd8;
parameter    ap_ST_fsm_state7 = 8'd16;
parameter    ap_ST_fsm_state8 = 8'd32;
parameter    ap_ST_fsm_pp1_stage0 = 8'd64;
parameter    ap_ST_fsm_state11 = 8'd128;

input   ap_clk;
input   ap_rst;
input  [7:0] e_dout;
input   e_empty_n;
output   e_read;
output  [7:0] s_din;
input   s_full_n;
output   s_write;

reg e_read;
reg s_write;

reg    e_blk_n;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln41_reg_658;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln54_fu_515_p2;
reg    s_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln68_reg_711;
reg   [31:0] R_0_reg_156;
reg   [6:0] i_0_reg_168;
reg   [6:0] i3_0_reg_213;
wire   [0:0] icmp_ln41_fu_224_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln41_reg_658_pp0_iter1_reg;
wire   [6:0] i_5_fu_230_p2;
reg   [6:0] i_5_reg_662;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] select_ln49_2_fu_349_p3;
reg   [31:0] select_ln49_2_reg_667;
reg   [30:0] lshr_ln49_3_reg_672;
wire   [31:0] select_ln49_7_fu_507_p3;
reg    ap_enable_reg_pp0_iter2;
wire   [2:0] i_fu_521_p2;
reg    ap_block_state7;
wire   [0:0] icmp_ln58_fu_551_p2;
wire    ap_CS_fsm_state8;
wire   [2:0] i_6_fu_557_p2;
wire   [31:0] crc_fu_603_p3;
wire   [0:0] icmp_ln63_fu_611_p2;
wire   [0:0] icmp_ln68_fu_617_p2;
wire    ap_block_state9_pp1_stage0_iter0;
reg    ap_block_state10_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] i_7_fu_623_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_CS_fsm_state2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg   [6:0] ibuffer_V_address0;
reg    ibuffer_V_ce0;
reg    ibuffer_V_we0;
wire   [7:0] ibuffer_V_q0;
reg   [31:0] ap_phi_mux_R_0_phi_fu_160_p4;
reg   [6:0] ap_phi_mux_i_0_phi_fu_172_p4;
reg   [2:0] i1_0_reg_180;
wire    ap_CS_fsm_state6;
reg   [31:0] crc_0_reg_191;
reg   [2:0] i2_0_reg_202;
wire   [63:0] zext_ln45_fu_236_p1;
wire   [63:0] zext_ln70_fu_629_p1;
reg   [7:0] crc_t_3_fu_102;
wire   [1:0] trunc_ln55_fu_527_p1;
reg   [7:0] crc_t_3_1_fu_106;
reg   [7:0] crc_t_3_2_fu_110;
reg   [7:0] crc_t_3_3_fu_114;
reg    ap_block_pp1_stage0_01001;
wire   [31:0] zext_ln46_fu_241_p1;
wire   [0:0] trunc_ln46_1_fu_249_p1;
wire   [0:0] trunc_ln46_fu_245_p1;
wire   [31:0] R_fu_253_p2;
wire   [30:0] lshr_ln_fu_265_p4;
wire   [31:0] zext_ln49_fu_275_p1;
wire   [0:0] xor_ln46_1_fu_259_p2;
wire   [31:0] xor_ln49_fu_279_p2;
wire   [31:0] select_ln49_fu_285_p3;
wire   [30:0] lshr_ln49_1_fu_297_p4;
wire   [31:0] zext_ln49_1_fu_307_p1;
wire   [0:0] trunc_ln49_fu_293_p1;
wire   [31:0] xor_ln49_1_fu_311_p2;
wire   [31:0] select_ln49_1_fu_317_p3;
wire   [30:0] lshr_ln49_2_fu_329_p4;
wire   [31:0] zext_ln49_2_fu_339_p1;
wire   [0:0] trunc_ln49_1_fu_325_p1;
wire   [31:0] xor_ln49_2_fu_343_p2;
wire   [31:0] zext_ln49_3_fu_370_p1;
wire   [0:0] trunc_ln49_2_fu_367_p1;
wire   [31:0] xor_ln49_3_fu_373_p2;
wire   [31:0] select_ln49_3_fu_379_p3;
wire   [30:0] lshr_ln49_4_fu_391_p4;
wire   [31:0] zext_ln49_4_fu_401_p1;
wire   [0:0] trunc_ln49_3_fu_387_p1;
wire   [31:0] xor_ln49_4_fu_405_p2;
wire   [31:0] select_ln49_4_fu_411_p3;
wire   [30:0] lshr_ln49_5_fu_423_p4;
wire   [31:0] zext_ln49_5_fu_433_p1;
wire   [0:0] trunc_ln49_4_fu_419_p1;
wire   [31:0] xor_ln49_5_fu_437_p2;
wire   [31:0] select_ln49_5_fu_443_p3;
wire   [30:0] lshr_ln49_6_fu_455_p4;
wire   [31:0] zext_ln49_6_fu_465_p1;
wire   [0:0] trunc_ln49_5_fu_451_p1;
wire   [31:0] xor_ln49_6_fu_469_p2;
wire   [31:0] select_ln49_6_fu_475_p3;
wire   [30:0] lshr_ln49_7_fu_487_p4;
wire   [31:0] zext_ln49_7_fu_497_p1;
wire   [0:0] trunc_ln49_6_fu_483_p1;
wire   [31:0] xor_ln49_7_fu_501_p2;
wire   [1:0] trunc_ln59_fu_575_p1;
wire   [1:0] tmp_11_fu_585_p5;
wire   [23:0] trunc_ln59_1_fu_599_p1;
wire   [7:0] tmp_11_fu_585_p6;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

CRCCheck_do_gen_ibkb #(
    .DataWidth( 8 ),
    .AddressRange( 68 ),
    .AddressWidth( 7 ))
ibuffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ibuffer_V_address0),
    .ce0(ibuffer_V_ce0),
    .we0(ibuffer_V_we0),
    .d0(e_dout),
    .q0(ibuffer_V_q0)
);

CRCCheck_mux_42_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
CRCCheck_mux_42_8cud_U9(
    .din0(crc_t_3_fu_102),
    .din1(crc_t_3_1_fu_106),
    .din2(crc_t_3_2_fu_110),
    .din3(crc_t_3_3_fu_114),
    .din4(tmp_11_fu_585_p5),
    .dout(tmp_11_fu_585_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln63_fu_611_p2 == 1'd1) & (icmp_ln58_fu_551_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln63_fu_611_p2 == 1'd1) & (icmp_ln58_fu_551_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_658_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        R_0_reg_156 <= select_ln49_7_fu_507_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        R_0_reg_156 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        crc_0_reg_191 <= 32'd0;
    end else if (((icmp_ln58_fu_551_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        crc_0_reg_191 <= crc_fu_603_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i1_0_reg_180 <= 3'd0;
    end else if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i1_0_reg_180 <= i_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i2_0_reg_202 <= 3'd0;
    end else if (((icmp_ln58_fu_551_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i2_0_reg_202 <= i_6_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln63_fu_611_p2 == 1'd1) & (icmp_ln58_fu_551_p2 == 1'd1))) begin
        i3_0_reg_213 <= 7'd0;
    end else if (((icmp_ln68_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i3_0_reg_213 <= i_7_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_658 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_168 <= i_5_reg_662;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_reg_168 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (trunc_ln55_fu_527_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        crc_t_3_1_fu_106 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (trunc_ln55_fu_527_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        crc_t_3_2_fu_110 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (trunc_ln55_fu_527_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state7))) begin
        crc_t_3_3_fu_114 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (trunc_ln55_fu_527_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        crc_t_3_fu_102 <= e_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_5_reg_662 <= i_5_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln41_reg_658 <= icmp_ln41_fu_224_p2;
        icmp_ln41_reg_658_pp0_iter1_reg <= icmp_ln41_reg_658;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln68_reg_711 <= icmp_ln68_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_658 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln49_3_reg_672 <= {{select_ln49_2_fu_349_p3[31:1]}};
        select_ln49_2_reg_667 <= select_ln49_2_fu_349_p3;
    end
end

always @ (*) begin
    if ((icmp_ln41_fu_224_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_617_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_658_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_R_0_phi_fu_160_p4 = select_ln49_7_fu_507_p3;
    end else begin
        ap_phi_mux_R_0_phi_fu_160_p4 = R_0_reg_156;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_658 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_172_p4 = i_5_reg_662;
    end else begin
        ap_phi_mux_i_0_phi_fu_172_p4 = i_0_reg_168;
    end
end

always @ (*) begin
    if ((((icmp_ln54_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln41_reg_658 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        e_blk_n = e_empty_n;
    end else begin
        e_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_658 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        e_read = 1'b1;
    end else begin
        e_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        ibuffer_V_address0 = zext_ln70_fu_629_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ibuffer_V_address0 = zext_ln45_fu_236_p1;
    end else begin
        ibuffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ibuffer_V_ce0 = 1'b1;
    end else begin
        ibuffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_658 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ibuffer_V_we0 = 1'b1;
    end else begin
        ibuffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln68_reg_711 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        s_blk_n = s_full_n;
    end else begin
        s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_711 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        s_write = 1'b1;
    end else begin
        s_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln41_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln41_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0)) & (icmp_ln54_fu_515_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln63_fu_611_p2 == 1'd1) & (icmp_ln58_fu_551_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln63_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln58_fu_551_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln68_fu_617_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln68_fu_617_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_fu_253_p2 = (zext_ln46_fu_241_p1 ^ ap_phi_mux_R_0_phi_fu_160_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln41_reg_658 == 1'd0) & (e_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln41_reg_658 == 1'd0) & (e_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln68_reg_711 == 1'd0) & (s_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln68_reg_711 == 1'd0) & (s_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln68_reg_711 == 1'd0) & (s_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter1 = ((icmp_ln68_reg_711 == 1'd0) & (s_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln41_reg_658 == 1'd0) & (e_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7 = ((icmp_ln54_fu_515_p2 == 1'd0) & (e_empty_n == 1'b0));
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign crc_fu_603_p3 = {{trunc_ln59_1_fu_599_p1}, {tmp_11_fu_585_p6}};

assign i_5_fu_230_p2 = (ap_phi_mux_i_0_phi_fu_172_p4 + 7'd1);

assign i_6_fu_557_p2 = (i2_0_reg_202 + 3'd1);

assign i_7_fu_623_p2 = (i3_0_reg_213 + 7'd1);

assign i_fu_521_p2 = (i1_0_reg_180 + 3'd1);

assign icmp_ln41_fu_224_p2 = ((ap_phi_mux_i_0_phi_fu_172_p4 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_515_p2 = ((i1_0_reg_180 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_551_p2 = ((i2_0_reg_202 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_611_p2 = ((crc_0_reg_191 == R_0_reg_156) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_617_p2 = ((i3_0_reg_213 == 7'd68) ? 1'b1 : 1'b0);

assign lshr_ln49_1_fu_297_p4 = {{select_ln49_fu_285_p3[31:1]}};

assign lshr_ln49_2_fu_329_p4 = {{select_ln49_1_fu_317_p3[31:1]}};

assign lshr_ln49_4_fu_391_p4 = {{select_ln49_3_fu_379_p3[31:1]}};

assign lshr_ln49_5_fu_423_p4 = {{select_ln49_4_fu_411_p3[31:1]}};

assign lshr_ln49_6_fu_455_p4 = {{select_ln49_5_fu_443_p3[31:1]}};

assign lshr_ln49_7_fu_487_p4 = {{select_ln49_6_fu_475_p3[31:1]}};

assign lshr_ln_fu_265_p4 = {{R_fu_253_p2[31:1]}};

assign s_din = ibuffer_V_q0;

assign select_ln49_1_fu_317_p3 = ((trunc_ln49_fu_293_p1[0:0] === 1'b1) ? xor_ln49_1_fu_311_p2 : zext_ln49_1_fu_307_p1);

assign select_ln49_2_fu_349_p3 = ((trunc_ln49_1_fu_325_p1[0:0] === 1'b1) ? xor_ln49_2_fu_343_p2 : zext_ln49_2_fu_339_p1);

assign select_ln49_3_fu_379_p3 = ((trunc_ln49_2_fu_367_p1[0:0] === 1'b1) ? xor_ln49_3_fu_373_p2 : zext_ln49_3_fu_370_p1);

assign select_ln49_4_fu_411_p3 = ((trunc_ln49_3_fu_387_p1[0:0] === 1'b1) ? xor_ln49_4_fu_405_p2 : zext_ln49_4_fu_401_p1);

assign select_ln49_5_fu_443_p3 = ((trunc_ln49_4_fu_419_p1[0:0] === 1'b1) ? xor_ln49_5_fu_437_p2 : zext_ln49_5_fu_433_p1);

assign select_ln49_6_fu_475_p3 = ((trunc_ln49_5_fu_451_p1[0:0] === 1'b1) ? xor_ln49_6_fu_469_p2 : zext_ln49_6_fu_465_p1);

assign select_ln49_7_fu_507_p3 = ((trunc_ln49_6_fu_483_p1[0:0] === 1'b1) ? xor_ln49_7_fu_501_p2 : zext_ln49_7_fu_497_p1);

assign select_ln49_fu_285_p3 = ((xor_ln46_1_fu_259_p2[0:0] === 1'b1) ? xor_ln49_fu_279_p2 : zext_ln49_fu_275_p1);

assign tmp_11_fu_585_p5 = (trunc_ln59_fu_575_p1 ^ 2'd3);

assign trunc_ln46_1_fu_249_p1 = ap_phi_mux_R_0_phi_fu_160_p4[0:0];

assign trunc_ln46_fu_245_p1 = e_dout[0:0];

assign trunc_ln49_1_fu_325_p1 = select_ln49_1_fu_317_p3[0:0];

assign trunc_ln49_2_fu_367_p1 = select_ln49_2_reg_667[0:0];

assign trunc_ln49_3_fu_387_p1 = select_ln49_3_fu_379_p3[0:0];

assign trunc_ln49_4_fu_419_p1 = select_ln49_4_fu_411_p3[0:0];

assign trunc_ln49_5_fu_451_p1 = select_ln49_5_fu_443_p3[0:0];

assign trunc_ln49_6_fu_483_p1 = select_ln49_6_fu_475_p3[0:0];

assign trunc_ln49_fu_293_p1 = select_ln49_fu_285_p3[0:0];

assign trunc_ln55_fu_527_p1 = i1_0_reg_180[1:0];

assign trunc_ln59_1_fu_599_p1 = crc_0_reg_191[23:0];

assign trunc_ln59_fu_575_p1 = i2_0_reg_202[1:0];

assign xor_ln46_1_fu_259_p2 = (trunc_ln46_fu_245_p1 ^ trunc_ln46_1_fu_249_p1);

assign xor_ln49_1_fu_311_p2 = (zext_ln49_1_fu_307_p1 ^ 32'd2197175160);

assign xor_ln49_2_fu_343_p2 = (zext_ln49_2_fu_339_p1 ^ 32'd2197175160);

assign xor_ln49_3_fu_373_p2 = (zext_ln49_3_fu_370_p1 ^ 32'd2197175160);

assign xor_ln49_4_fu_405_p2 = (zext_ln49_4_fu_401_p1 ^ 32'd2197175160);

assign xor_ln49_5_fu_437_p2 = (zext_ln49_5_fu_433_p1 ^ 32'd2197175160);

assign xor_ln49_6_fu_469_p2 = (zext_ln49_6_fu_465_p1 ^ 32'd2197175160);

assign xor_ln49_7_fu_501_p2 = (zext_ln49_7_fu_497_p1 ^ 32'd2197175160);

assign xor_ln49_fu_279_p2 = (zext_ln49_fu_275_p1 ^ 32'd2197175160);

assign zext_ln45_fu_236_p1 = i_0_reg_168;

assign zext_ln46_fu_241_p1 = e_dout;

assign zext_ln49_1_fu_307_p1 = lshr_ln49_1_fu_297_p4;

assign zext_ln49_2_fu_339_p1 = lshr_ln49_2_fu_329_p4;

assign zext_ln49_3_fu_370_p1 = lshr_ln49_3_reg_672;

assign zext_ln49_4_fu_401_p1 = lshr_ln49_4_fu_391_p4;

assign zext_ln49_5_fu_433_p1 = lshr_ln49_5_fu_423_p4;

assign zext_ln49_6_fu_465_p1 = lshr_ln49_6_fu_455_p4;

assign zext_ln49_7_fu_497_p1 = lshr_ln49_7_fu_487_p4;

assign zext_ln49_fu_275_p1 = lshr_ln_fu_265_p4;

assign zext_ln70_fu_629_p1 = i3_0_reg_213;

endmodule //CRCCheck_do_gen
