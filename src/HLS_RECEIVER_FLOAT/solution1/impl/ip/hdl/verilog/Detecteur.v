// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Detecteur,hls_ip_2020_1,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=580,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=180,HLS_SYN_FF=21073,HLS_SYN_LUT=19285,HLS_VERSION=2020_1}" *)

module Detecteur (
        clock,
        reset,
        e_dout,
        e_empty_n,
        e_read,
        s_din,
        s_full_n,
        s_write
);


input   clock;
input   reset;
input  [7:0] e_dout;
input   e_empty_n;
output   e_read;
output  [7:0] s_din;
input   s_full_n;
output   s_write;

wire    grp_Seuil_calc_fu_100_e_read;
wire    grp_Seuil_calc_fu_100_detect_din;
wire    grp_Seuil_calc_fu_100_detect_write;
wire    grp_trames_separ_fu_114_e_read;
wire    grp_trames_separ_fu_114_detect_dout;
wire    grp_trames_separ_fu_114_detect_read;
wire   [7:0] grp_trames_separ_fu_114_s_din;
wire    grp_trames_separ_fu_114_s_write;
wire    grp_DOUBLEUR_U_fu_130_e_read;
wire   [7:0] grp_DOUBLEUR_U_fu_130_s1_din;
wire    grp_DOUBLEUR_U_fu_130_s1_write;
wire   [7:0] grp_DOUBLEUR_U_fu_130_s2_din;
wire    grp_DOUBLEUR_U_fu_130_s2_write;
wire    dbl2scalc_1_full_n;
wire    dbl2tsep_1_full_n;
wire   [7:0] dbl2scalc_1_dout;
wire    dbl2scalc_1_empty_n;
wire   [0:0] detect_1_din;
wire    detect_1_full_n;
wire   [7:0] dbl2tsep_1_dout;
wire    dbl2tsep_1_empty_n;
wire   [0:0] detect_1_dout;
wire    detect_1_empty_n;

Seuil_calc grp_Seuil_calc_fu_100(
    .e_dout(dbl2scalc_1_dout),
    .e_empty_n(dbl2scalc_1_empty_n),
    .e_read(grp_Seuil_calc_fu_100_e_read),
    .detect_din(grp_Seuil_calc_fu_100_detect_din),
    .detect_full_n(detect_1_full_n),
    .detect_write(grp_Seuil_calc_fu_100_detect_write),
    .clock(clock),
    .reset(reset)
);

trames_separ grp_trames_separ_fu_114(
    .e_dout(dbl2tsep_1_dout),
    .e_empty_n(dbl2tsep_1_empty_n),
    .e_read(grp_trames_separ_fu_114_e_read),
    .detect_dout(grp_trames_separ_fu_114_detect_dout),
    .detect_empty_n(detect_1_empty_n),
    .detect_read(grp_trames_separ_fu_114_detect_read),
    .s_din(grp_trames_separ_fu_114_s_din),
    .s_full_n(s_full_n),
    .s_write(grp_trames_separ_fu_114_s_write),
    .clock(clock),
    .reset(reset)
);

DOUBLEUR_U grp_DOUBLEUR_U_fu_130(
    .e_dout(e_dout),
    .e_empty_n(e_empty_n),
    .e_read(grp_DOUBLEUR_U_fu_130_e_read),
    .s1_din(grp_DOUBLEUR_U_fu_130_s1_din),
    .s1_full_n(dbl2scalc_1_full_n),
    .s1_write(grp_DOUBLEUR_U_fu_130_s1_write),
    .s2_din(grp_DOUBLEUR_U_fu_130_s2_din),
    .s2_full_n(dbl2tsep_1_full_n),
    .s2_write(grp_DOUBLEUR_U_fu_130_s2_write),
    .clock(clock),
    .reset(reset)
);

fifo_w8_d1024_A dbl2scalc_1_fifo_U(
    .clk(clock),
    .reset(reset),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_DOUBLEUR_U_fu_130_s1_din),
    .if_full_n(dbl2scalc_1_full_n),
    .if_write(grp_DOUBLEUR_U_fu_130_s1_write),
    .if_dout(dbl2scalc_1_dout),
    .if_empty_n(dbl2scalc_1_empty_n),
    .if_read(grp_Seuil_calc_fu_100_e_read)
);

fifo_w8_d1024_A dbl2tsep_1_fifo_U(
    .clk(clock),
    .reset(reset),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_DOUBLEUR_U_fu_130_s2_din),
    .if_full_n(dbl2tsep_1_full_n),
    .if_write(grp_DOUBLEUR_U_fu_130_s2_write),
    .if_dout(dbl2tsep_1_dout),
    .if_empty_n(dbl2tsep_1_empty_n),
    .if_read(grp_trames_separ_fu_114_e_read)
);

fifo_w1_d1024_A detect_1_fifo_U(
    .clk(clock),
    .reset(reset),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_1_din),
    .if_full_n(detect_1_full_n),
    .if_write(grp_Seuil_calc_fu_100_detect_write),
    .if_dout(detect_1_dout),
    .if_empty_n(detect_1_empty_n),
    .if_read(grp_trames_separ_fu_114_detect_read)
);

assign detect_1_din = grp_Seuil_calc_fu_100_detect_din;

assign e_read = grp_DOUBLEUR_U_fu_130_e_read;

assign grp_trames_separ_fu_114_detect_dout = detect_1_dout;

assign s_din = grp_trames_separ_fu_114_s_din;

assign s_write = grp_trames_separ_fu_114_s_write;

endmodule //Detecteur
