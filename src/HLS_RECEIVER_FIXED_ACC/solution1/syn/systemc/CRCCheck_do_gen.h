// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _CRCCheck_do_gen_HH_
#define _CRCCheck_do_gen_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CRCCheck_mux_42_8cud.h"
#include "CRCCheck_do_gen_ibkb.h"

namespace ap_rtl {

struct CRCCheck_do_gen : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > e_dout;
    sc_in< sc_logic > e_empty_n;
    sc_out< sc_logic > e_read;
    sc_out< sc_lv<8> > s_din;
    sc_in< sc_logic > s_full_n;
    sc_out< sc_logic > s_write;


    // Module declarations
    CRCCheck_do_gen(sc_module_name name);
    SC_HAS_PROCESS(CRCCheck_do_gen);

    ~CRCCheck_do_gen();

    sc_trace_file* mVcdFile;

    CRCCheck_do_gen_ibkb* ibuffer_V_U;
    CRCCheck_mux_42_8cud<1,1,8,8,8,8,2,8>* CRCCheck_mux_42_8cud_U9;
    sc_signal< sc_logic > e_blk_n;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln41_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln54_fu_515_p2;
    sc_signal< sc_logic > s_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln68_reg_711;
    sc_signal< sc_lv<32> > R_0_reg_156;
    sc_signal< sc_lv<7> > i_0_reg_168;
    sc_signal< sc_lv<7> > i3_0_reg_213;
    sc_signal< sc_lv<1> > icmp_ln41_fu_224_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln41_reg_658_pp0_iter1_reg;
    sc_signal< sc_lv<7> > i_5_fu_230_p2;
    sc_signal< sc_lv<7> > i_5_reg_662;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > select_ln49_2_fu_349_p3;
    sc_signal< sc_lv<32> > select_ln49_2_reg_667;
    sc_signal< sc_lv<31> > lshr_ln49_3_reg_672;
    sc_signal< sc_lv<32> > select_ln49_7_fu_507_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<3> > i_fu_521_p2;
    sc_signal< bool > ap_block_state7;
    sc_signal< sc_lv<1> > icmp_ln58_fu_551_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > i_6_fu_557_p2;
    sc_signal< sc_lv<32> > crc_fu_603_p3;
    sc_signal< sc_lv<1> > icmp_ln63_fu_611_p2;
    sc_signal< sc_lv<1> > icmp_ln68_fu_617_p2;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<7> > i_7_fu_623_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state9;
    sc_signal< sc_lv<7> > ibuffer_V_address0;
    sc_signal< sc_logic > ibuffer_V_ce0;
    sc_signal< sc_logic > ibuffer_V_we0;
    sc_signal< sc_lv<8> > ibuffer_V_q0;
    sc_signal< sc_lv<32> > ap_phi_mux_R_0_phi_fu_160_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_i_0_phi_fu_172_p4;
    sc_signal< sc_lv<3> > i1_0_reg_180;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > crc_0_reg_191;
    sc_signal< sc_lv<3> > i2_0_reg_202;
    sc_signal< sc_lv<64> > zext_ln45_fu_236_p1;
    sc_signal< sc_lv<64> > zext_ln70_fu_629_p1;
    sc_signal< sc_lv<8> > crc_t_3_fu_102;
    sc_signal< sc_lv<2> > trunc_ln55_fu_527_p1;
    sc_signal< sc_lv<8> > crc_t_3_1_fu_106;
    sc_signal< sc_lv<8> > crc_t_3_2_fu_110;
    sc_signal< sc_lv<8> > crc_t_3_3_fu_114;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<32> > zext_ln46_fu_241_p1;
    sc_signal< sc_lv<1> > trunc_ln46_1_fu_249_p1;
    sc_signal< sc_lv<1> > trunc_ln46_fu_245_p1;
    sc_signal< sc_lv<32> > R_fu_253_p2;
    sc_signal< sc_lv<31> > lshr_ln_fu_265_p4;
    sc_signal< sc_lv<32> > zext_ln49_fu_275_p1;
    sc_signal< sc_lv<1> > xor_ln46_1_fu_259_p2;
    sc_signal< sc_lv<32> > xor_ln49_fu_279_p2;
    sc_signal< sc_lv<32> > select_ln49_fu_285_p3;
    sc_signal< sc_lv<31> > lshr_ln49_1_fu_297_p4;
    sc_signal< sc_lv<32> > zext_ln49_1_fu_307_p1;
    sc_signal< sc_lv<1> > trunc_ln49_fu_293_p1;
    sc_signal< sc_lv<32> > xor_ln49_1_fu_311_p2;
    sc_signal< sc_lv<32> > select_ln49_1_fu_317_p3;
    sc_signal< sc_lv<31> > lshr_ln49_2_fu_329_p4;
    sc_signal< sc_lv<32> > zext_ln49_2_fu_339_p1;
    sc_signal< sc_lv<1> > trunc_ln49_1_fu_325_p1;
    sc_signal< sc_lv<32> > xor_ln49_2_fu_343_p2;
    sc_signal< sc_lv<32> > zext_ln49_3_fu_370_p1;
    sc_signal< sc_lv<1> > trunc_ln49_2_fu_367_p1;
    sc_signal< sc_lv<32> > xor_ln49_3_fu_373_p2;
    sc_signal< sc_lv<32> > select_ln49_3_fu_379_p3;
    sc_signal< sc_lv<31> > lshr_ln49_4_fu_391_p4;
    sc_signal< sc_lv<32> > zext_ln49_4_fu_401_p1;
    sc_signal< sc_lv<1> > trunc_ln49_3_fu_387_p1;
    sc_signal< sc_lv<32> > xor_ln49_4_fu_405_p2;
    sc_signal< sc_lv<32> > select_ln49_4_fu_411_p3;
    sc_signal< sc_lv<31> > lshr_ln49_5_fu_423_p4;
    sc_signal< sc_lv<32> > zext_ln49_5_fu_433_p1;
    sc_signal< sc_lv<1> > trunc_ln49_4_fu_419_p1;
    sc_signal< sc_lv<32> > xor_ln49_5_fu_437_p2;
    sc_signal< sc_lv<32> > select_ln49_5_fu_443_p3;
    sc_signal< sc_lv<31> > lshr_ln49_6_fu_455_p4;
    sc_signal< sc_lv<32> > zext_ln49_6_fu_465_p1;
    sc_signal< sc_lv<1> > trunc_ln49_5_fu_451_p1;
    sc_signal< sc_lv<32> > xor_ln49_6_fu_469_p2;
    sc_signal< sc_lv<32> > select_ln49_6_fu_475_p3;
    sc_signal< sc_lv<31> > lshr_ln49_7_fu_487_p4;
    sc_signal< sc_lv<32> > zext_ln49_7_fu_497_p1;
    sc_signal< sc_lv<1> > trunc_ln49_6_fu_483_p1;
    sc_signal< sc_lv<32> > xor_ln49_7_fu_501_p2;
    sc_signal< sc_lv<2> > trunc_ln59_fu_575_p1;
    sc_signal< sc_lv<2> > tmp_1_fu_585_p5;
    sc_signal< sc_lv<24> > trunc_ln59_1_fu_599_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_585_p6;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<7> ap_const_lv7_44;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_82F63B78;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_R_fu_253_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state10_pp1_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state7();
    void thread_ap_block_state9_pp1_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state9();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_R_0_phi_fu_160_p4();
    void thread_ap_phi_mux_i_0_phi_fu_172_p4();
    void thread_crc_fu_603_p3();
    void thread_e_blk_n();
    void thread_e_read();
    void thread_i_5_fu_230_p2();
    void thread_i_6_fu_557_p2();
    void thread_i_7_fu_623_p2();
    void thread_i_fu_521_p2();
    void thread_ibuffer_V_address0();
    void thread_ibuffer_V_ce0();
    void thread_ibuffer_V_we0();
    void thread_icmp_ln41_fu_224_p2();
    void thread_icmp_ln54_fu_515_p2();
    void thread_icmp_ln58_fu_551_p2();
    void thread_icmp_ln63_fu_611_p2();
    void thread_icmp_ln68_fu_617_p2();
    void thread_lshr_ln49_1_fu_297_p4();
    void thread_lshr_ln49_2_fu_329_p4();
    void thread_lshr_ln49_4_fu_391_p4();
    void thread_lshr_ln49_5_fu_423_p4();
    void thread_lshr_ln49_6_fu_455_p4();
    void thread_lshr_ln49_7_fu_487_p4();
    void thread_lshr_ln_fu_265_p4();
    void thread_s_blk_n();
    void thread_s_din();
    void thread_s_write();
    void thread_select_ln49_1_fu_317_p3();
    void thread_select_ln49_2_fu_349_p3();
    void thread_select_ln49_3_fu_379_p3();
    void thread_select_ln49_4_fu_411_p3();
    void thread_select_ln49_5_fu_443_p3();
    void thread_select_ln49_6_fu_475_p3();
    void thread_select_ln49_7_fu_507_p3();
    void thread_select_ln49_fu_285_p3();
    void thread_tmp_1_fu_585_p5();
    void thread_trunc_ln46_1_fu_249_p1();
    void thread_trunc_ln46_fu_245_p1();
    void thread_trunc_ln49_1_fu_325_p1();
    void thread_trunc_ln49_2_fu_367_p1();
    void thread_trunc_ln49_3_fu_387_p1();
    void thread_trunc_ln49_4_fu_419_p1();
    void thread_trunc_ln49_5_fu_451_p1();
    void thread_trunc_ln49_6_fu_483_p1();
    void thread_trunc_ln49_fu_293_p1();
    void thread_trunc_ln55_fu_527_p1();
    void thread_trunc_ln59_1_fu_599_p1();
    void thread_trunc_ln59_fu_575_p1();
    void thread_xor_ln46_1_fu_259_p2();
    void thread_xor_ln49_1_fu_311_p2();
    void thread_xor_ln49_2_fu_343_p2();
    void thread_xor_ln49_3_fu_373_p2();
    void thread_xor_ln49_4_fu_405_p2();
    void thread_xor_ln49_5_fu_437_p2();
    void thread_xor_ln49_6_fu_469_p2();
    void thread_xor_ln49_7_fu_501_p2();
    void thread_xor_ln49_fu_279_p2();
    void thread_zext_ln45_fu_236_p1();
    void thread_zext_ln46_fu_241_p1();
    void thread_zext_ln49_1_fu_307_p1();
    void thread_zext_ln49_2_fu_339_p1();
    void thread_zext_ln49_3_fu_370_p1();
    void thread_zext_ln49_4_fu_401_p1();
    void thread_zext_ln49_5_fu_433_p1();
    void thread_zext_ln49_6_fu_465_p1();
    void thread_zext_ln49_7_fu_497_p1();
    void thread_zext_ln49_fu_275_p1();
    void thread_zext_ln70_fu_629_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
